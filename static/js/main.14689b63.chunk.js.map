{"version":3,"sources":["redux/weather.redux.js","redux/reducers/index.js","utils/weatherConfig.js","redux/store/index.js","components/Header/index.js","utils/autoComplete.js","containers/Search/index.js","components/WeatherItem/index.js","containers/WeatherList/index.js","index.js"],"names":["initState","data","message","getWeatherData","cityName","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","url","res","wrap","_context","prev","next","concat","axios","get","sent","status","type","payload","t0","stop","_x","apply","this","arguments","combineReducers","weather","state","length","undefined","action","dataArr","currentID","id","array","cityId","i","isCityExist","arr","output","splice","deleteDuplicate","unshift","objectSpread","push","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunkMiddleware","Header","props","react_default","createElement","className","content","getSuggestions","value","inputValue","toLowerCase","inputLength","cityList","filter","element","name","slice","getSuggestionValue","suggestion","Search","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","SuggestionList","handleChange","e","setState","target","onChange","newValue","onSuggestionsFetchRequested","_ref2","suggestions","onSuggestionsClearRequested","handleKeyDown","keyCode","_this$state","inputProps","placeholder","onKeyDown","dist_default","renderSuggestion","Component","actionCreators","connect","WeatherItem","key","src","icon","alt","temp","city","description","WeatherList","console","log","weatherData","map","WeatherItem_WeatherItem","f","main","toFixed","Header_Header","containers_Search","react_transition_group","transitionName","transitionEnterTimeout","transitionLeaveTimeout","ReactDOM","render","es","containers_WeatherList","document","getElementById"],"mappings":"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","file":"static/js/main.14689b63.chunk.js","sourcesContent":["import axios from 'axios'\nimport { isCityExist, deleteDuplicate } from '../utils/weatherConfig'\nconst initState = { data: [], message: 'Weather' }\n\nconst GET_WEATHER_DATA_SUCCESS = 'GET_WEATHER_DATA_SUCCESS'\nconst GET_WEATHER_DATA_ERROR = 'GET_WEATHER_DATA_ERROR'\n\n//Reducer\nexport const weather = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase GET_WEATHER_DATA_SUCCESS:\n\t\t\tconst dataArr = state.data\n\t\t\tconst currentID = action.payload.id\n\t\t\tif (isCityExist(dataArr, currentID)) {\n\t\t\t\tconst arr = deleteDuplicate(dataArr, currentID)\n\t\t\t\tarr.unshift(action.payload)\n\t\t\t\treturn (state = { ...state, data: arr })\n\t\t\t}\n\t\t\tstate.data.push(action.payload)\n\t\t\treturn (state = { ...state })\n\t\tcase GET_WEATHER_DATA_ERROR:\n\t\t\treturn (state = { ...state, message: `Can not find City name '${action.payload}'`})\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const getWeatherData = cityName => async dispatch => {\n\tconst url = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=bd45fc9db8849cb46d00a451483ccd44`\n\ttry {\n\t\tconst res = await axios.get(url)\n\t\tif (res.status === 200) dispatch({ type: GET_WEATHER_DATA_SUCCESS, payload: res.data })\n\t} catch (error) {\n\t\tdispatch({ type: GET_WEATHER_DATA_ERROR, payload: cityName })\n\t}\n}\n","import { combineReducers } from 'redux'\nimport { weather } from '../weather.redux'\n\nexport default combineReducers({\n\tweather\n})\n","export const isCityExist = (array, cityId) => {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!array) return false\n\t\tif (array[i].id === cityId) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\nexport const deleteDuplicate = (array, cityId) => {\n\tlet output = array\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!array) return false\n\t\tif (array[i].id === cityId) {\n\t\t\toutput.splice(i, 1)\n\t\t\treturn output\n\t\t}\n\t}\n}\n\nexport const fToC = f => {\n\treturn (f - 273.15).toFixed(1) + '\\xB0C'\n}\n","import reducer from '../reducers'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport thunkMiddleware from 'redux-thunk'\n\nexport const store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__\n        ? compose(applyMiddleware(thunkMiddleware),window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n        : compose(applyMiddleware(thunkMiddleware))\n)\n","import React from 'react'\nimport './Header.scss'\n\nexport default function Header(props){\n\treturn (\n\t\t<div className='header'>\n\t\t\t<h1>{props.content}</h1>\n\t\t</div>\n\t)\n}\n","import cityList from './cities'\n\nexport const getSuggestions = value => {\n\tconst inputValue = value.toLowerCase()\n\tconst inputLength = inputValue.length\n\n\treturn inputLength === 0 ? [] : cityList.filter(element => element.name.toLowerCase().slice(0, inputLength) === inputValue).slice(0, 30)\n}\n\nexport const getSuggestionValue = suggestion => suggestion.name\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {getWeatherData} from '../../redux/weather.redux'\nimport Autosuggest from 'react-autosuggest'\nimport {getSuggestions, getSuggestionValue} from '../../utils/autoComplete'\nimport './Search.scss'\n\nclass Search extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: '',\n            suggestions: []\n        }\n    }\n\n    SuggestionList = suggestion => <div>{suggestion.name}</div>\n\n    handleChange = e => this.setState({value: e.target.value})\n\n    onChange = (e, {newValue}) => this.setState({value: newValue})\n\n    onSuggestionsFetchRequested = ({value}) => this.setState({suggestions: getSuggestions(value)})\n\n    onSuggestionsClearRequested = () => this.setState({suggestions: []})\n\n    handleKeyDown = e => {\n        if (e.keyCode === 13 && this.state.value) {\n            this.props.getWeatherData(this.state.value)\n            this.setState({value: ''})\n        }\n    }\n\n    render() {\n        const { value, suggestions } = this.state\n        const inputProps = {\n            placeholder: 'Type Your City...',\n            className: 'input',\n            value,\n            onChange: this.onChange,\n            onKeyDown: this.handleKeyDown\n        }\n\n        return (\n            <div>\n                <Autosuggest\n                    onKeyDown={this.handleKeyDown}\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={getSuggestionValue}\n                    renderSuggestion={this.SuggestionList}\n                    inputProps={inputProps}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => state\nconst actionCreators = {getWeatherData}\n\nexport default connect(\n    mapStateToProps,\n    actionCreators\n)(Search)\n","import React from 'react'\nimport './WeatherItem.scss'\n\nexport default function WeatherItem(props){\n\treturn (\n\t\t<div className='item-box' key={props.id}>\n\t\t\t<img src={props.icon} alt='' />\n\t\t\t<div className='temp'>{props.temp}</div>\n\t\t\t<div className='city'>{props.city}</div>\n\t\t\t<div className='desc'>{props.description}</div>\n\t\t</div>\n\t)\n}\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {getWeatherData} from '../../redux/weather.redux'\nimport Header from '../../components/Header'\nimport Search from '../Search'\nimport WeatherItem from '../../components/WeatherItem'\nimport {fToC} from '../../utils/weatherConfig'\nimport {CSSTransitionGroup} from 'react-transition-group'\nimport './WeatherList.scss'\n\nclass WeatherList extends Component {\n    render() {\n        console.log(this.props)\n        const weather = this.props.weather\n        const weatherData = weather.data.map(data => {\n            return (\n                <WeatherItem\n                    key={data.id}\n                    city={data.name}\n                    temp={fToC(data.main.temp)}\n                    description={data.weather[0].description}\n                    icon={`http://openweathermap.org/img/w/${data.weather[0].icon}.png`}\n                />\n            )\n        })\n        return (\n            <div className={'weather-box'}>\n                <Header content={weather.message} />\n                <Search />\n                <CSSTransitionGroup transitionName='example' transitionEnterTimeout={200} transitionLeaveTimeout={200}>\n                    {weatherData}\n                </CSSTransitionGroup>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => state\nconst actionCreators = {getWeatherData}\nexport default connect(\n    mapStateToProps,\n    actionCreators\n)(WeatherList)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\nimport WeatherList from './containers/WeatherList'\nimport './style/global.scss'\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<div className='App'>\n\t\t\t<WeatherList />\n\t\t</div>\n\t</Provider>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}